package com.example.calculadorabtus
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.size
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import androidx.compose.ui.text.input.KeyboardType
import com.example.calculadorabtus.ui.theme.CalculadoraBTUsTheme
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.ui.text.input.ImeAction


class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            CalculadoraBTUsTheme {
                Surface(
                    modifier = Modifier.fillMaxSize(),
                    color = MaterialTheme.colorScheme.background
                ) {
                    App()
                }
            }
        }
    }
}

@Composable
fun App() {
    // Configuração da tela
    Column(
        Modifier
            .background(color = Color(0xFF3F51B5))
            .fillMaxSize(),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Text(
            "Calculadora BTUs",
            style = TextStyle(
                color = Color.White,
                fontSize = 45.sp,
                fontWeight = FontWeight.Bold
            )
        )

        Spacer(modifier = Modifier.size(17.dp))

        // Variável de estado para o valor de entrada (BTUs)
        var valorBTUs by remember { mutableStateOf("") }
        // Variável de estado para o resultado (Metros Quadrados)
        var resultadoMetros by remember { mutableStateOf("") }

        TextField(
            value = valorBTUs,
            onValueChange = { novoValor ->
                valorBTUs = novoValor

                // Converter para Double para o cálculo
                val valorNumerico = novoValor.toDoubleOrNull()
                if (valorNumerico != null && valorNumerico > 0) {
                    // cálculo e resultado
                    val resultado = valorNumerico / 600
                    resultadoMetros = "%.2f".format(resultado) // Formata o resultado com 2 casas decimais
                } else {
                    // Se a entrada não for um número válido
                    resultadoMetros = ""
                }
            },
            label = { Text("BTUs") },
            maxLines = 1,
            keyboardOptions = KeyboardOptions(
                keyboardType = KeyboardType.Number,
                imeAction = ImeAction.Done,
            )
        )

        Spacer(modifier = Modifier.size(17.dp))

        // Exibe o resultado
        if (resultadoMetros.isNotBlank()) {
            Text(
                "Metros Quadrados: $resultadoMetros",
                style = TextStyle(
                    color = Color.White,
                    fontSize = 30.sp,
                    fontWeight = FontWeight.Bold
                )
            )
        }
    }
}
